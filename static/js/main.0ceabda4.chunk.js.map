{"version":3,"sources":["components/searchbar/searchbar.js","components/imagefinderApi.js","components/imageGallery/imageGalleryItem.js","components/button/button.js","components/spiner/spiner.js","components/modal/modal.js","components/imageGallery/imageGallery.js","App.js","index.js"],"names":["Searchbar","onSubmit","useState","searchQuery","setSearchQuery","className","evt","preventDefault","trim","alert","type","autoComplete","autoFocus","placeholder","name","value","onChange","e","target","toLowerCase","fetchImages","pageNumber","fetch","then","res","json","hits","ImageGalleryItem","images","getLargeImageURL","map","image","src","webformatURL","data-src","largeImageURL","alt","tag","onClick","dataset","id","BtnLoadMore","typ","Spiner","color","secondaryColor","height","width","Component","Modal","onClose","useEffect","window","addEventListener","code","console","log","createPortal","currentTarget","href","document","querySelector","ImageGallery","setImages","setPageNumber","showModal","setShowModal","setLargeImageURL","status","setStatus","imageFinderApi","imagesOfAPI","prevState","finally","scrollTo","top","documentElement","scrollHeight","behavior","App","query","ReactDOM","render","StrictMode","getElementById"],"mappings":"mOAEe,SAASA,EAAT,GAAkC,IAAbC,EAAY,EAAZA,SAAY,EACRC,mBAAS,IADD,mBACvCC,EADuC,KAC1BC,EAD0B,KAe9C,OACE,wBAAQC,UAAU,YAAlB,SACE,uBAAMA,UAAU,aAAaJ,SAdZ,SAAAK,GACnBA,EAAIC,iBAEuB,KAAvBJ,EAAYK,QAKhBP,EAASE,GACTC,EAAe,KALbK,MAAM,uBAUN,UACE,wBAAQC,KAAK,SAASL,UAAU,oBAAhC,SACE,sBAAMA,UAAU,0BAAhB,sBAGF,uBACEA,UAAU,mBACVK,KAAK,OACLC,aAAa,MACbC,WAAS,EACTC,YAAY,2BACZC,KAAK,OACLC,MAAOZ,EACPa,SAAU,SAAAC,GAAC,OAAIb,EAAea,EAAEC,OAAOH,MAAMI,uB,WCtBxCC,MARf,SAAqBjB,EAAakB,GAChC,OAAOC,MAAM,8BAAD,OACoBnB,EADpB,iBACwCkB,EADxC,gBAHF,qCAGE,yDAGTE,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,qBAAGG,SCLE,SAASC,EAAT,GAAyD,IAA7BC,EAA4B,EAA5BA,OAAQC,EAAoB,EAApBA,iBACjD,OAAOD,EAAOE,KAAI,SAACC,GAAD,OAChB,oBAAI1B,UAAU,mBAAd,SACE,qBACE2B,IAAKD,EAAME,aACXC,WAAUH,EAAMI,cAChBC,IAAKL,EAAMM,IACXhC,UAAU,yBACViC,QAAS,SAACrB,GAAD,OAAOY,EAAiBZ,EAAEC,OAAOqB,QAAQP,SANhBD,EAAMS,OCJjC,SAASC,EAAT,GAAmC,IAAZH,EAAW,EAAXA,QACpC,OACE,wBAAQI,IAAI,SAASrC,UAAU,SAASiC,QAASA,EAAjD,uB,oDCCiBK,E,uKAGjB,OACE,cAAC,IAAD,CACEtC,UAAU,SACVK,KAAK,YACLkC,MAAM,OACNC,eAAe,OACfC,OAAQ,GACRC,MAAO,S,GAVqBC,aCArB,SAASC,EAAT,GAA4C,IAA3BC,EAA0B,EAA1BA,QAASf,EAAiB,EAAjBA,cACvCgB,qBAAU,WACRC,OAAOC,iBAAiB,WAAW,SAAApC,GAClB,WAAXA,EAAEqC,OACJC,QAAQC,IAAI,UACZN,UAGH,CAACA,IAQJ,OAAOO,uBACL,qBAAKpD,UAAU,UAAUiC,QAPC,SAAArB,GACtBA,EAAEC,SAAWD,EAAEyC,eACjBR,KAKF,SACE,qBAAK7C,UAAU,QAAf,SACE,mBAAGsD,KAAMxB,EAAT,SACE,qBAAKH,IAAKG,EAAeC,IAAI,WAInCwB,SAASC,cAAc,gBCpBZ,SAASC,EAAT,GAAwC,IAAhB3D,EAAe,EAAfA,YAAe,EACxBD,mBAAS,IADe,mBAC7C0B,EAD6C,KACrCmC,EADqC,OAEhB7D,mBAAS,GAFO,mBAE7CmB,EAF6C,KAEjC2C,EAFiC,OAGlB9D,oBAAS,GAHS,mBAG7C+D,EAH6C,KAGlCC,EAHkC,OAIVhE,mBAAS,IAJC,mBAI7CiC,EAJ6C,KAI9BgC,EAJ8B,OAKxBjE,mBAAS,QALe,mBAK7CkE,EAL6C,KAKrCC,EALqC,KA2CpD,OApCAlB,qBAAU,WACRa,EAAc,KACb,CAAC7D,IAEJgD,qBAAU,WACY,KAAhBhD,IAIgB,KAAhBA,GAAqC,IAAfkB,IACxBgD,EAAU,WAEVC,EAAenE,EAAakB,GAAYE,MAAK,SAAAgD,GAC3CR,EAAUQ,GACVF,EAAU,gBAIM,KAAhBlE,GAAqC,IAAfkB,IACxBgD,EAAU,WAEVC,EAAenE,EAAakB,GACzBE,MAAK,SAAAgD,GACJR,GAAU,SAAAS,GAAS,4BAAQA,GAAR,YAAsBD,OAEzCF,EAAU,eAEXI,SAAQ,kBACPrB,OAAOsB,SAAS,CACdC,IAAKf,SAASgB,gBAAgBC,aAC9BC,SAAU,kBAIjB,CAACzD,EAAYlB,IAED,SAAXiE,EACK,wBAGM,YAAXA,EAEA,gCACE,oBAAI/D,UAAU,eAAd,SACGuB,GAAU,cAACD,EAAD,CAAkBC,OAAQA,MAEvC,cAAC,EAAD,IAJF,OASW,aAAXwC,EAEA,gCACE,oBAAI/D,UAAU,eAAd,SACE,cAACsB,EAAD,CACEC,OAAQA,EACRC,iBAAkB,SAAAM,GAChB+B,GAAcD,GACdE,EAAiBhC,QAIvB,cAACM,EAAD,CAAaH,QAAS,kBAAM0B,EAAc3C,EAAa,MACtD4C,GACC,cAAChB,EAAD,CACEC,QAAS,kBAAMgB,GAAcD,IAC7B9B,cAAeA,YAhBzB,E,MC5Da,SAAS4C,IAAO,IAAD,EACU7E,mBAAS,IADnB,mBACrBC,EADqB,KACRC,EADQ,KAG5B,OACE,gCACE,cAACJ,EAAD,CAAWC,SAAU,SAAA+E,GAAK,OAAI5E,EAAe4E,MAC7C,cAAClB,EAAD,CAAc3D,YAAaA,OCPjC8E,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFvB,SAASwB,eAAe,W","file":"static/js/main.0ceabda4.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nexport default function Searchbar({ onSubmit }) {\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n\r\n  const handleSubmit = evt => {\r\n    evt.preventDefault();\r\n\r\n    if (searchQuery.trim() === '') {\r\n      alert('Enter text, please');\r\n      return;\r\n    }\r\n\r\n    onSubmit(searchQuery);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  return (\r\n    <header className=\"Searchbar\">\r\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className=\"SearchForm-button\">\r\n          <span className=\"SearchForm-button-label\">Search</span>\r\n        </button>\r\n\r\n        <input\r\n          className=\"SearchForm-input\"\r\n          type=\"text\"\r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images and photos\"\r\n          name=\"name\"\r\n          value={searchQuery}\r\n          onChange={e => setSearchQuery(e.target.value.toLowerCase())}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n","const KEY = \"19040716-d2ab54626dacf9b7f6f91612a\";\r\n\r\nfunction fetchImages(searchQuery, pageNumber) {\r\n  return fetch(\r\n    `https://pixabay.com/api/?q=${searchQuery}&page=${pageNumber}&key=${KEY}&image_type=photo&orientation=horizontal&per_page=12`\r\n  )\r\n    .then((res) => res.json())\r\n    .then(({ hits }) => hits);\r\n}\r\n\r\nexport default fetchImages;\r\n","import React from \"react\";\r\n\r\nexport default function ImageGalleryItem({ images, getLargeImageURL }) {\r\n  return images.map((image) => (\r\n    <li className=\"ImageGalleryItem\" key={image.id}>\r\n      <img\r\n        src={image.webformatURL}\r\n        data-src={image.largeImageURL}\r\n        alt={image.tag}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={(e) => getLargeImageURL(e.target.dataset.src)}\r\n      />\r\n    </li>\r\n  ));\r\n}\r\n","export default function BtnLoadMore({ onClick }) {\r\n  return (\r\n    <button typ=\"button\" className=\"Button\" onClick={onClick}>\r\n      Load More\r\n    </button>\r\n  );\r\n}\r\n","import { Component } from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport default class Spiner extends Component {\r\n  //other logic\r\n  render() {\r\n    return (\r\n      <Loader\r\n        className=\"loader\"\r\n        type=\"ThreeDots\"\r\n        color=\"plum\"\r\n        secondaryColor=\"grey\"\r\n        height={40}\r\n        width={80}\r\n      />\r\n    );\r\n  }\r\n}\r\n","import React, { useEffect } from 'react';\r\nimport { createPortal } from 'react-dom';\r\n\r\nexport default function Modal({ onClose, largeImageURL }) {\r\n  useEffect(() => {\r\n    window.addEventListener('keydown', e => {\r\n      if (e.code === 'Escape') {\r\n        console.log('Escape');\r\n        onClose();\r\n      }\r\n    });\r\n  }, [onClose]);\r\n\r\n  const handelBackdropClick = e => {\r\n    if (e.target === e.currentTarget) {\r\n      onClose();\r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className=\"Overlay\" onClick={handelBackdropClick}>\r\n      <div className=\"Modal\">\r\n        <a href={largeImageURL}>\r\n          <img src={largeImageURL} alt=\"\" />\r\n        </a>\r\n      </div>\r\n    </div>,\r\n    document.querySelector('#modal-root'),\r\n  );\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport imageFinderApi from '../imagefinderApi';\r\nimport ImageGalleryItem from './imageGalleryItem';\r\nimport BtnLoadMore from '../button/button';\r\nimport Spiner from '../spiner/spiner';\r\nimport Modal from '../modal/modal';\r\n\r\nexport default function ImageGallery({ searchQuery }) {\r\n  const [images, setImages] = useState([]);\r\n  const [pageNumber, setPageNumber] = useState(1);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [largeImageURL, setLargeImageURL] = useState('');\r\n  const [status, setStatus] = useState('idle');\r\n\r\n  useEffect(() => {\r\n    setPageNumber(1);\r\n  }, [searchQuery]);\r\n\r\n  useEffect(() => {\r\n    if (searchQuery === '') {\r\n      return;\r\n    }\r\n\r\n    if (searchQuery !== '' && pageNumber === 1) {\r\n      setStatus('pending');\r\n\r\n      imageFinderApi(searchQuery, pageNumber).then(imagesOfAPI => {\r\n        setImages(imagesOfAPI);\r\n        setStatus('resolved');\r\n      });\r\n    }\r\n\r\n    if (searchQuery !== '' && pageNumber !== 1) {\r\n      setStatus('pending');\r\n\r\n      imageFinderApi(searchQuery, pageNumber)\r\n        .then(imagesOfAPI => {\r\n          setImages(prevState => [...prevState, ...imagesOfAPI]);\r\n\r\n          setStatus('resolved');\r\n        })\r\n        .finally(() =>\r\n          window.scrollTo({\r\n            top: document.documentElement.scrollHeight,\r\n            behavior: 'smooth',\r\n          }),\r\n        );\r\n    }\r\n  }, [pageNumber, searchQuery]);\r\n\r\n  if (status === 'idle') {\r\n    return <div></div>;\r\n  }\r\n\r\n  if (status === 'pending') {\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          {images && <ImageGalleryItem images={images} />}\r\n        </ul>\r\n        <Spiner />;\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (status === 'resolved') {\r\n    return (\r\n      <div>\r\n        <ul className=\"ImageGallery\">\r\n          <ImageGalleryItem\r\n            images={images}\r\n            getLargeImageURL={largeImageURL => {\r\n              setShowModal(!showModal);\r\n              setLargeImageURL(largeImageURL);\r\n            }}\r\n          />\r\n        </ul>\r\n        <BtnLoadMore onClick={() => setPageNumber(pageNumber + 1)} />\r\n        {showModal && (\r\n          <Modal\r\n            onClose={() => setShowModal(!showModal)}\r\n            largeImageURL={largeImageURL}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import { useState } from 'react';\nimport Searchbar from './components/searchbar/searchbar';\nimport ImageGallery from './components/imageGallery/imageGallery';\nimport './App.css';\n\nexport default function App() {\n  const [searchQuery, setSearchQuery] = useState('');\n\n  return (\n    <div>\n      <Searchbar onSubmit={query => setSearchQuery(query)} />\n      <ImageGallery searchQuery={searchQuery} />\n    </div>\n  );\n}\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}